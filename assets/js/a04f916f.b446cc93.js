"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[171],{32100:n=>{n.exports=JSON.parse('{"functions":[{"name":"Connect","desc":"Connect a [Callback] to this Event.\\n\\nThe Callback will be called every time this Event fires. It can be\\ndisconnected through the returned [Connection].\\n\\n```lua\\nsignal:Connect(function(event: string)\\n\\tprint(event, \\"was fired!\\")\\nend)\\n```\\n\\n\\t","params":[{"name":"callback","desc":"","lua_type":"Callback"}],"returns":[{"desc":"","lua_type":"Connection\\n"}],"function_type":"method","source":{"line":98,"path":"lib/init.lua"}}],"properties":[],"types":[],"name":"Event","desc":"An Event that you can subscribe to.\\n\\nThis is effectively the subscription end of a [Signal]. This is primarily\\nused to provide subscription to external consumers of a Signal. For example,\\nyou may want to provide a Signal that can be subscribed to, but not fired.\\n\\n\\t","source":{"line":81,"path":"lib/init.lua"}}')}}]);