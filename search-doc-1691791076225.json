[{"title":"Connection","type":0,"sectionRef":"#","url":"/signal/api/Connection","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Connection","url":"/signal/api/Connection#functions","content":" "},{"title":"disconnect​","type":1,"pageTitle":"Connection","url":"/signal/api/Connection#disconnect","content":"&lt;/&gt; Connection.disconnect() → () Disconnects this connection.  "},{"title":"isConnected​","type":1,"pageTitle":"Connection","url":"/signal/api/Connection#isConnected","content":"&lt;/&gt; Connection.isConnected() → boolean Checks if this function is currently connected. "},{"title":"Event","type":0,"sectionRef":"#","url":"/signal/api/Event","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Event","url":"/signal/api/Event#types","content":" "},{"title":"Callback​","type":1,"pageTitle":"Event","url":"/signal/api/Event#Callback","content":"&lt;/&gt; type Callback = (...unknown) → () A function called when an Event fires. "},{"title":"Functions​","type":1,"pageTitle":"Event","url":"/signal/api/Event#functions","content":" "},{"title":"Connect​","type":1,"pageTitle":"Event","url":"/signal/api/Event#Connect","content":"&lt;/&gt; Event:Connect(callback: Callback) → Connection Connect a Callback to this Event. The Callback will be called every time this Event fires. It can be disconnected through the returned Connection. "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/signal/docs/intro","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"/signal/docs/intro#installation","content":"To use this linked list, you need to include it as a dependency in yourwally.toml file. It can then be installed with Wally. LinkedList = &quot;lasttalon/linked-list@0.1.0&quot;  "},{"title":"Usage​","type":1,"pageTitle":"Getting Started","url":"/signal/docs/intro#usage","content":"To create a linked list in your project, simply require the module and use the new constructor. We can then manipulate the list using the provided methods. local LinkedList = require(ReplicatedStorage.Packages.LinkedList) -- Create a new linked list local list = LinkedList.new() -- Add some values to the list list:Push(1) list:Push(2) list:Push(3) -- Remove the last value from the list local value = list:Pop() print(value) -- 3 -- Iterate over the list for value in list do print(value) end  Refer to the API documentation for more detailed information. "}]